// Copyright 2022
// Autogenerated from Pigeon (v4.2.3), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class FLTCreateShaderFilterMessage;
@class FLTCreateFilterMessage;
@class FLTAppendFilterMessage;
@class FLTAppendShaderFilterMessage;
@class FLTRemoveFilterMessage;
@class FLTReplaceFilterMessage;
@class FLTInputSourceMessage;
@class FLTInputDataMessage;
@class FLTExportFileMessage;
@class FLTExportDataMessage;
@class FLTInputNumberValueMessage;
@class FLTInputNumberListValueMessage;
@class FLTInputDataValueMessage;
@class FLTInputDataSourceValueMessage;
@class FLTFilterMessage;
@class FLTPreviewCreateMessage;
@class FLTPreviewFilterMessage;
@class FLTPreviewSourceMessage;
@class FLTPreviewPlayMessage;
@class FLTPreviewPauseMessage;
@class FLTPreviewDisposeMessage;

@interface FLTCreateShaderFilterMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithVertex:(nullable NSString *)vertex
    shader:(NSString *)shader
    params:(NSDictionary<NSString *, NSDictionary<NSString *, id> *> *)params;
@property(nonatomic, copy, nullable) NSString * vertex;
@property(nonatomic, copy) NSString * shader;
@property(nonatomic, strong) NSDictionary<NSString *, NSDictionary<NSString *, id> *> * params;
@end

@interface FLTCreateFilterMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithName:(NSString *)name;
@property(nonatomic, copy) NSString * name;
@end

@interface FLTAppendFilterMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithName:(NSString *)name
    filterId:(NSNumber *)filterId;
@property(nonatomic, copy) NSString * name;
@property(nonatomic, strong) NSNumber * filterId;
@end

@interface FLTAppendShaderFilterMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithFilterId:(NSNumber *)filterId
    vertex:(nullable NSString *)vertex
    shader:(NSString *)shader
    params:(NSDictionary<NSString *, NSDictionary<NSString *, id> *> *)params;
@property(nonatomic, strong) NSNumber * filterId;
@property(nonatomic, copy, nullable) NSString * vertex;
@property(nonatomic, copy) NSString * shader;
@property(nonatomic, strong) NSDictionary<NSString *, NSDictionary<NSString *, id> *> * params;
@end

@interface FLTRemoveFilterMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithFilterId:(NSNumber *)filterId
    filterIndex:(NSNumber *)filterIndex;
@property(nonatomic, strong) NSNumber * filterId;
@property(nonatomic, strong) NSNumber * filterIndex;
@end

@interface FLTReplaceFilterMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithFilterId:(NSNumber *)filterId
    filterIndex:(NSNumber *)filterIndex
    name:(NSString *)name;
@property(nonatomic, strong) NSNumber * filterId;
@property(nonatomic, strong) NSNumber * filterIndex;
@property(nonatomic, copy) NSString * name;
@end

@interface FLTInputSourceMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithFilterId:(NSNumber *)filterId
    path:(NSString *)path
    asset:(NSNumber *)asset
    video:(NSNumber *)video;
@property(nonatomic, strong) NSNumber * filterId;
@property(nonatomic, copy) NSString * path;
@property(nonatomic, strong) NSNumber * asset;
@property(nonatomic, strong) NSNumber * video;
@end

@interface FLTInputDataMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithFilterId:(NSNumber *)filterId
    data:(FlutterStandardTypedData *)data;
@property(nonatomic, strong) NSNumber * filterId;
@property(nonatomic, strong) FlutterStandardTypedData * data;
@end

@interface FLTExportFileMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithFilterId:(NSNumber *)filterId
    path:(NSString *)path
    video:(NSNumber *)video;
@property(nonatomic, strong) NSNumber * filterId;
@property(nonatomic, copy) NSString * path;
@property(nonatomic, strong) NSNumber * video;
@end

@interface FLTExportDataMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithFilterId:(NSNumber *)filterId
    data:(FlutterStandardTypedData *)data;
@property(nonatomic, strong) NSNumber * filterId;
@property(nonatomic, strong) FlutterStandardTypedData * data;
@end

@interface FLTInputNumberValueMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithFilterId:(NSNumber *)filterId
    filterIndex:(NSNumber *)filterIndex
    key:(NSString *)key
    value:(NSNumber *)value;
@property(nonatomic, strong) NSNumber * filterId;
@property(nonatomic, strong) NSNumber * filterIndex;
@property(nonatomic, copy) NSString * key;
@property(nonatomic, strong) NSNumber * value;
@end

@interface FLTInputNumberListValueMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithFilterId:(NSNumber *)filterId
    filterIndex:(NSNumber *)filterIndex
    key:(NSString *)key
    value:(NSArray<NSNumber *> *)value;
@property(nonatomic, strong) NSNumber * filterId;
@property(nonatomic, strong) NSNumber * filterIndex;
@property(nonatomic, copy) NSString * key;
@property(nonatomic, strong) NSArray<NSNumber *> * value;
@end

@interface FLTInputDataValueMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithFilterId:(NSNumber *)filterId
    filterIndex:(NSNumber *)filterIndex
    key:(NSString *)key
    value:(FlutterStandardTypedData *)value;
@property(nonatomic, strong) NSNumber * filterId;
@property(nonatomic, strong) NSNumber * filterIndex;
@property(nonatomic, copy) NSString * key;
@property(nonatomic, strong) FlutterStandardTypedData * value;
@end

@interface FLTInputDataSourceValueMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithFilterId:(NSNumber *)filterId
    filterIndex:(NSNumber *)filterIndex
    key:(NSString *)key
    value:(NSString *)value;
@property(nonatomic, strong) NSNumber * filterId;
@property(nonatomic, strong) NSNumber * filterIndex;
@property(nonatomic, copy) NSString * key;
@property(nonatomic, copy) NSString * value;
@end

@interface FLTFilterMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithFilterId:(NSNumber *)filterId;
@property(nonatomic, strong) NSNumber * filterId;
@end

@interface FLTPreviewCreateMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithTextureId:(NSNumber *)textureId;
@property(nonatomic, strong) NSNumber * textureId;
@end

@interface FLTPreviewFilterMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithTextureId:(NSNumber *)textureId
    filterId:(NSNumber *)filterId;
@property(nonatomic, strong) NSNumber * textureId;
@property(nonatomic, strong) NSNumber * filterId;
@end

@interface FLTPreviewSourceMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithTextureId:(NSNumber *)textureId
    path:(NSString *)path;
@property(nonatomic, strong) NSNumber * textureId;
@property(nonatomic, copy) NSString * path;
@end

@interface FLTPreviewPlayMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithTextureId:(NSNumber *)textureId;
@property(nonatomic, strong) NSNumber * textureId;
@end

@interface FLTPreviewPauseMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithTextureId:(NSNumber *)textureId;
@property(nonatomic, strong) NSNumber * textureId;
@end

@interface FLTPreviewDisposeMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithTextureId:(NSNumber *)textureId;
@property(nonatomic, strong) NSNumber * textureId;
@end

/// The codec used by FLTImageVideoFilterFactoryApi.
NSObject<FlutterMessageCodec> *FLTImageVideoFilterFactoryApiGetCodec(void);

@protocol FLTImageVideoFilterFactoryApi
/// @return `nil` only when `error != nil`.
- (nullable FLTFilterMessage *)createFilter:(FLTCreateFilterMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable FLTFilterMessage *)createShaderFilter:(FLTCreateShaderFilterMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable FLTFilterMessage *)createFilterGroup:(FlutterError *_Nullable *_Nonnull)error;
- (void)appendFilter:(FLTAppendFilterMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)appendShaderFilter:(FLTAppendShaderFilterMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)removeFilter:(FLTRemoveFilterMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)replaceFilter:(FLTReplaceFilterMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setInputData:(FLTInputDataMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setInputSource:(FLTInputSourceMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable FLTExportDataMessage *)exportData:(FLTFilterMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)exportFile:(FLTExportFileMessage *)msg completion:(void(^)(FlutterError *_Nullable))completion;
- (void)setNumberValue:(FLTInputNumberValueMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setNumberListValue:(FLTInputNumberListValueMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setDataValue:(FLTInputDataValueMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setDataSourceValue:(FLTInputDataSourceValueMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)disposeFilter:(FLTFilterMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void FLTImageVideoFilterFactoryApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FLTImageVideoFilterFactoryApi> *_Nullable api);

/// The codec used by FLTVideoPreviewApi.
NSObject<FlutterMessageCodec> *FLTVideoPreviewApiGetCodec(void);

@protocol FLTVideoPreviewApi
/// @return `nil` only when `error != nil`.
- (nullable FLTPreviewCreateMessage *)create:(FlutterError *_Nullable *_Nonnull)error;
- (void)setFilter:(FLTPreviewFilterMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setSource:(FLTPreviewSourceMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)play:(FLTPreviewPlayMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)pause:(FLTPreviewPauseMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)dispose:(FLTPreviewDisposeMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void FLTVideoPreviewApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FLTVideoPreviewApi> *_Nullable api);

NS_ASSUME_NONNULL_END
